{"version":3,"file":"component---src-pages-thoughts-tsx-52e264b4f815ec4849f1.js","mappings":"8KAmCC,IAyBKA,EAAY,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,MAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAA,IAAAI,EAAAL,EAAAM,UAyDf,OAzDeD,EAChBE,kBAAA,WACE,MAAMC,EAAWC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC7CC,EAAeN,EAAS,GAAGO,KAC3BC,EAAcR,EAASA,EAASS,OAAS,GAAGF,KAGlDG,EAAEC,UAAUC,GAAG,WAAWC,IACxBA,EAAIC,kBAEJ,MAAM,QAAEC,GAAYF,EAGJ,KAAZE,IACFC,EAAAA,EAAAA,IAASR,EAAYS,OAAOC,MAGd,KAAZH,IACFC,EAAAA,EAAAA,IAASV,EAAaW,OAAOC,KAC/B,GAEJ,EAACrB,EAEDsB,qBAAA,WAEET,EAAEC,UAAUS,IAAI,UAClB,EAACvB,EAEDwB,OAAA,WACE,MAAM,KAAElB,EAAI,SAAEmB,GAAarB,KAAKC,MAC1BqB,EAAYpB,EAAKqB,KAAKC,aAAaC,MACnC1B,EAAWG,EAAKC,kBAAkBC,MAExC,OACEsB,EAAAA,cAACC,EAAAA,EAAM,CAACN,SAAUA,EAAUI,MAAOH,GACjCI,EAAAA,cAACE,EAAAA,EAAG,CAACH,MAAM,aACXC,EAAAA,cAAA,OAAKG,UAAU,iBACbH,EAAAA,cAAA,OAAKG,UAAU,kBACZ9B,EAAS+B,KAAIC,IAAe,IAAd,KAAEzB,GAAMyB,EACrB,MAAMN,EAAQnB,EAAK0B,YAAYP,OAASnB,EAAKU,OAAOC,KACpD,OACES,EAAAA,cAACO,EAAAA,GAAI,CAACC,IAAK5B,EAAKU,OAAOC,KAAMkB,GAAI7B,EAAKU,OAAOC,MAC3CS,EAAAA,cAAA,OAAKG,UAAU,qBACbH,EAAAA,cAAA,OAAKG,UAAU,kBACZJ,GAEHC,EAAAA,cAAA,OAAKG,UAAU,iBACZvB,EAAK0B,YAAYI,OAGjB,MAOrB,EAAC7C,CAAA,CAzDe,CAASmC,EAAAA,WA4D3B,W","sources":["webpack://little-laffs/./src/pages/thoughts.tsx"],"sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { navigate, PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../styles/thoughts.css\"\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/blog/\" } } },\n      sort: { frontmatter: { date: DESC } },\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nclass ThoughtIndex extends React.Component {\n  componentDidMount() {\n    const thoughts = this.props.data.allMarkdownRemark.edges\n    const firstThought = thoughts[0].node\n    const lastThought = thoughts[thoughts.length - 1].node\n\n    // Arrow Key integration\n    $(document).on('keydown', evt => {\n      evt.stopPropagation()\n\n      const { keyCode } = evt\n\n      // Left Arrow\n      if (keyCode === 37) {\n        navigate(lastThought.fields.slug)\n      }\n      // Right Arrow\n      if (keyCode === 39) {\n        navigate(firstThought.fields.slug)\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    // Remove Event Handlers\n    $(document).off('keydown')\n  }\n\n  render() {\n    const { data, location } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const thoughts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Thoughts\" />\n        <div className=\"thoughts-page\">\n          <div className=\"thoughts__list\">\n            {thoughts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <Link key={node.fields.slug} to={node.fields.slug}>\n                  <div className=\"thought-list-item\">\n                    <div className=\"thought__title\">\n                      {title}\n                    </div>\n                    <div className=\"thought__date\">\n                      {node.frontmatter.date}\n                    </div>\n                  </div>\n                </Link>\n              )\n            })}\n          </div>\n       </div> \n      </Layout>\n    )\n  }\n}\n\nexport default ThoughtIndex\n"],"names":["ThoughtIndex","_React$Component","apply","arguments","_inheritsLoose","_proto","prototype","componentDidMount","thoughts","this","props","data","allMarkdownRemark","edges","firstThought","node","lastThought","length","$","document","on","evt","stopPropagation","keyCode","navigate","fields","slug","componentWillUnmount","off","render","location","siteTitle","site","siteMetadata","title","React","Layout","SEO","className","map","_ref","frontmatter","Link","key","to","date"],"sourceRoot":""}